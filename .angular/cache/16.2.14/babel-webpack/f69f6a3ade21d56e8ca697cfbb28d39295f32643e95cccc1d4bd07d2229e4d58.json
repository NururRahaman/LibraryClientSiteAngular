{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./author.service\";\nimport * as i4 from \"@angular/common\";\nfunction AuthorComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction AuthorComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction AuthorComponent_span_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction AuthorComponent_span_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction AuthorComponent_p_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.message, \" \");\n  }\n}\nfunction AuthorComponent_tr_68_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 23);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 23);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 23);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 23);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 23)(12, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function AuthorComponent_tr_68_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const author_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.loadAuthorToEdit(author_r6.authorId));\n    });\n    i0.ɵɵtext(13, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\", 23)(15, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function AuthorComponent_tr_68_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const author_r6 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.deleteAuthor(author_r6.authorId));\n    });\n    i0.ɵɵtext(16, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const author_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(author_r6.authorName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(author_r6.doB);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(author_r6.contactNo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(author_r6.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(author_r6.isActive);\n  }\n}\nexport class AuthorComponent {\n  constructor(formBuilder, routes, authorService) {\n    this.formBuilder = formBuilder;\n    this.routes = routes;\n    this.authorService = authorService;\n    this.dataSaved = false;\n    this.allAuthor = this.authorService.getAllAuthor();\n    this.authorIdUpdate = null;\n    this.message = \"\";\n  }\n  ngOnInit() {\n    this.authorForm = this.formBuilder.group({\n      authorName: ['', [Validators.required]],\n      doB: ['', [Validators.required]],\n      contactNo: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      isActive: [false]\n    });\n    this.loadAllAuthor();\n  }\n  loadAllAuthor() {\n    this.allAuthor = this.authorService.getAllAuthor();\n  }\n  onFormSubmit() {\n    this.dataSaved = false;\n    const author = this.authorForm.value;\n    this.createAuthor(author);\n    this.authorForm.reset();\n  }\n  loadAuthorToEdit(authorId) {\n    this.authorService.getAuthorById(authorId).subscribe(author => {\n      this.message = \"\";\n      this.dataSaved = false;\n      this.authorIdUpdate = author.authorId;\n      this.authorForm.get(\"authorName\").setValue(author[\"authorName\"]);\n      this.authorForm.get(\"contactNo\").setValue(author[\"contactNo\"]);\n      this.authorForm.get(\"doB\").setValue(author[\"doB\"]);\n      this.authorForm.get(\"email\").setValue(author[\"email\"]);\n      this.authorForm.get(\"isActive\").setValue(author[\"isActive\"]);\n    });\n  }\n  createAuthor(author) {\n    if (this.authorIdUpdate == null) {\n      this.authorService.createAuthor(author).subscribe(() => {\n        this.dataSaved = true;\n        this.message = \"Record Saved Successfully!!!!!\";\n        this.loadAllAuthor();\n        this.authorIdUpdate = null;\n        this.authorForm.reset();\n      });\n    } else {\n      author.authorId = this.authorIdUpdate;\n      this.authorService.updateAuthor(this.authorIdUpdate, author).subscribe(() => {\n        this.dataSaved = true;\n        this.message = \"Record Updated Successfully!!!!!\";\n        this.loadAllAuthor();\n        this.authorIdUpdate = null;\n        this.authorForm.reset();\n      });\n    }\n  }\n  deleteAuthor(id) {\n    if (confirm(\"Are You Sure You Want To Delete This Data?\")) {\n      this.authorService.deleteAuthor(id).subscribe(() => {\n        this.dataSaved = true;\n        this.message = \"Record Deleted Successfully!!!!!\";\n        this.loadAllAuthor();\n        this.authorIdUpdate = null;\n        this.authorForm.reset();\n      });\n    }\n  }\n  resetForm() {\n    this.authorForm.reset();\n    this.message = \"\";\n    this.dataSaved = false;\n  }\n  static #_ = this.ɵfac = function AuthorComponent_Factory(t) {\n    return new (t || AuthorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthorService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthorComponent,\n    selectors: [[\"app-author\"]],\n    decls: 70,\n    vars: 10,\n    consts: [[1, \"container\", 2, \"width\", \"100%\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"card\"], [1, \"card-header\", \"bg-info\"], [1, \"m-b-0\", \"text-white\"], [1, \"fa\", \"fa-plus-circle\", 2, \"font-size\", \"20px\", \"margin\", \"5px\"], [2, \"width\", \"50%\"], [1, \"tbl1\"], [1, \"demo-full-width\"], [\"formControlName\", \"authorName\", \"type\", \"text\", \"placeholder\", \"Author Name\", 1, \"form-control\"], [4, \"ngIf\"], [\"formControlName\", \"doB\", \"type\", \"date\", 1, \"form-control\"], [\"formControlName\", \"contactNo\", \"type\", \"text\", \"placeholder\", \"Contact No\", 1, \"form-control\"], [\"formControlName\", \"email\", \"type\", \"text\", \"placeholder\", \"Email Address\", 1, \"form-control\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"formControlName\", \"isActive\", \"name\", \"IsActive\", 1, \"form-check-input\"], [\"for\", \"IsActive\", 1, \"form-check-label\"], [1, \"content-center\", \"btn-toolbar\"], [\"style\", \"color:rgb(0, 128, 0);font-size:20px;font-weight:bold\", \"Class\", \"success\", \"align\", \"left\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"background-color\", \"darkblue\", \"color\", \"white\", 3, \"disabled\"], [\"type\", \"reset\", 1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"table\"], [\"ngclass\", \"btn-primary\"], [1, \"tbl2\"], [4, \"ngFor\", \"ngForOf\"], [\"Class\", \"success\", \"align\", \"left\", 2, \"color\", \"rgb(0, 128, 0)\", \"font-size\", \"20px\", \"font-weight\", \"bold\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function AuthorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthorComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onFormSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\", 4);\n        i0.ɵɵelement(5, \"i\", 5);\n        i0.ɵɵelementStart(6, \"small\");\n        i0.ɵɵtext(7, \"Author Information\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"div\")(9, \"div\", 6)(10, \"div\")(11, \"table\")(12, \"tr\")(13, \"td\", 7)(14, \"div\", 8);\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\");\n        i0.ɵɵtemplate(17, AuthorComponent_span_17_Template, 1, 0, \"span\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"tr\")(19, \"td\", 7)(20, \"div\", 8);\n        i0.ɵɵelement(21, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtemplate(23, AuthorComponent_span_23_Template, 1, 0, \"span\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"tr\")(25, \"td\", 7)(26, \"div\", 8);\n        i0.ɵɵelement(27, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\");\n        i0.ɵɵtemplate(29, AuthorComponent_span_29_Template, 1, 0, \"span\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(30, \"tr\")(31, \"td\", 7)(32, \"div\", 8);\n        i0.ɵɵelement(33, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\");\n        i0.ɵɵtemplate(35, AuthorComponent_span_35_Template, 1, 0, \"span\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(36, \"tr\")(37, \"td\", 14);\n        i0.ɵɵelement(38, \"input\", 15);\n        i0.ɵɵelementStart(39, \"label\", 16);\n        i0.ɵɵtext(40, \" Is Active? \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(41, \"tr\");\n        i0.ɵɵelement(42, \"td\")(43, \"td\", 17);\n        i0.ɵɵelementStart(44, \"td\");\n        i0.ɵɵtemplate(45, AuthorComponent_p_45_Template, 2, 1, \"p\", 18);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(46, \"div\")(47, \"button\", 19);\n        i0.ɵɵtext(48, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(49, \"\\u00A0 \");\n        i0.ɵɵelementStart(50, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function AuthorComponent_Template_button_click_50_listener() {\n          return ctx.resetForm();\n        });\n        i0.ɵɵtext(51, \"Reset\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(52, \"table\", 21)(53, \"tr\", 22)(54, \"th\", 23);\n        i0.ɵɵtext(55, \"Author Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"th\", 23);\n        i0.ɵɵtext(57, \"Date Of Birth\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"th\", 23);\n        i0.ɵɵtext(59, \"Contact No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"th\", 23);\n        i0.ɵɵtext(61, \"Email Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"th\", 23);\n        i0.ɵɵtext(63, \"Is Active?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"th\", 23);\n        i0.ɵɵtext(65, \"Edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"th\", 23);\n        i0.ɵɵtext(67, \"Delete\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(68, AuthorComponent_tr_68_Template, 17, 5, \"tr\", 24);\n        i0.ɵɵpipe(69, \"async\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.authorForm);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngIf\", !ctx.authorForm.get(\"authorName\").value && ctx.authorForm.get(\"authorName\").touched);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.authorForm.get(\"doB\").value && ctx.authorForm.get(\"doB\").touched);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.authorForm.get(\"contactNo\").value && ctx.authorForm.get(\"contactNo\").touched);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.authorForm.get(\"email\").value && ctx.authorForm.get(\"email\").touched);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataSaved);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.authorForm.valid);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(69, 8, ctx.allAuthor));\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r4","message","ɵɵlistener","AuthorComponent_tr_68_Template_button_click_12_listener","restoredCtx","ɵɵrestoreView","_r8","author_r6","$implicit","ctx_r7","ɵɵnextContext","ɵɵresetView","loadAuthorToEdit","authorId","AuthorComponent_tr_68_Template_button_click_15_listener","ctx_r9","deleteAuthor","ɵɵtextInterpolate","authorName","doB","contactNo","email","isActive","AuthorComponent","constructor","formBuilder","routes","authorService","dataSaved","allAuthor","getAllAuthor","authorIdUpdate","ngOnInit","authorForm","group","required","loadAllAuthor","onFormSubmit","author","value","createAuthor","reset","getAuthorById","subscribe","get","setValue","updateAuthor","id","confirm","resetForm","_","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","AuthorService","_2","selectors","decls","vars","consts","template","AuthorComponent_Template","rf","ctx","AuthorComponent_Template_form_ngSubmit_1_listener","ɵɵtemplate","AuthorComponent_span_17_Template","AuthorComponent_span_23_Template","AuthorComponent_span_29_Template","AuthorComponent_span_35_Template","AuthorComponent_p_45_Template","AuthorComponent_Template_button_click_50_listener","AuthorComponent_tr_68_Template","ɵɵproperty","touched","valid","ɵɵpipeBind1"],"sources":["F:\\Library2\\LibraryClientSite\\src\\app\\author\\author.component.ts","F:\\Library2\\LibraryClientSite\\src\\app\\author\\author.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { from, Observable } from 'rxjs';\nimport { Author } from './author.model';\nimport { Router } from '@angular/router';\nimport { AuthorService } from './author.service';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-author',\n  templateUrl: './author.component.html',\n  styleUrls: ['./author.component.css']\n})\nexport class AuthorComponent implements OnInit {\n\n  dataSaved = false;\n  authorForm: any;\n  allAuthor: Observable<any>=this.authorService.getAllAuthor();\n  authorIdUpdate = null;\n  message = \"\";\n\n  constructor(private formBuilder: FormBuilder, private routes: Router,\n    private authorService: AuthorService) { }\n\n  ngOnInit() {\n    this.authorForm = this.formBuilder.group({\n      authorName: ['', [Validators.required]],\n      doB: ['', [Validators.required]],\n      contactNo: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      isActive: [false],\n    });\n    this.loadAllAuthor();\n  }\n\n  loadAllAuthor() {\n    this.allAuthor = this.authorService.getAllAuthor();\n  }\n\n  onFormSubmit() {\n    this.dataSaved = false;\n    const author = this.authorForm.value;\n    this.createAuthor(author);\n    this.authorForm.reset();\n  }\n\n  loadAuthorToEdit(authorId: any) {\n    this.authorService.getAuthorById(authorId).subscribe(author => {\n      this.message = \"\";\n      this.dataSaved = false;\n      this.authorIdUpdate = author.authorId;\n      this.authorForm.get(\"authorName\").setValue(author[\"authorName\"]);\n      this.authorForm.get(\"contactNo\").setValue(author[\"contactNo\"]);\n      this.authorForm.get(\"doB\").setValue(author[\"doB\"]);\n      this.authorForm.get(\"email\").setValue(author[\"email\"]);\n      this.authorForm.get(\"isActive\").setValue(author[\"isActive\"]);\n    })\n  }\n  createAuthor(author: Author) {\n    if (this.authorIdUpdate == null) {\n      this.authorService.createAuthor(author).subscribe(\n        () => {\n          this.dataSaved = true;\n          this.message = \"Record Saved Successfully!!!!!\";\n          this.loadAllAuthor();\n          this.authorIdUpdate = null;\n          this.authorForm.reset();\n        }\n      )\n    }\n\n    else {\n      author.authorId = this.authorIdUpdate;\n      this.authorService.updateAuthor(this.authorIdUpdate, author).subscribe(() => {\n        this.dataSaved = true;\n        this.message = \"Record Updated Successfully!!!!!\";\n        this.loadAllAuthor();\n        this.authorIdUpdate = null;\n        this.authorForm.reset();\n      })\n    }\n  }\n\n  deleteAuthor(id: string) {\n    if (confirm(\"Are You Sure You Want To Delete This Data?\")) {\n      this.authorService.deleteAuthor(id).subscribe(() => {\n        this.dataSaved = true;\n        this.message = \"Record Deleted Successfully!!!!!\";\n        this.loadAllAuthor();\n        this.authorIdUpdate = null;\n        this.authorForm.reset();\n      })\n    }\n  }\n\n  resetForm() {\n    this.authorForm.reset();\n    this.message = \"\";\n    this.dataSaved = false;\n  }\n\n}\n","<div class=\"container\" style=\"width:100%\">\n    <form [formGroup]=\"authorForm\" (ngSubmit)=\"onFormSubmit()\">\n      <div class=\"card\">\n        <div class=\"card-header bg-info\">\n          <h2 class=\"m-b-0 text-white\">\n            <i class=\"fa fa-plus-circle\" style=\"font-size:20px; margin:5px;\"></i><small>Author Information</small>\n          </h2>\n        </div>\n        <div>\n  \n          <div style=\"width:50%\">\n            <div>\n              <table>\n                <tr>\n                  <td class=\"tbl1\">\n                    <div class=\"demo-full-width\">\n                      <input formControlName=\"authorName\" type=\"text\" placeholder=\"Author Name\" class=\"form-control\">\n                    </div>\n                    <div>\n                      <span *ngIf=\"!authorForm.get('authorName').value && authorForm.get('authorName').touched\"></span>\n                    </div>\n                  </td>\n                </tr>\n  \n                <tr>\n                  <td class=\"tbl1\">\n                    <div class=\"demo-full-width\">\n                      <input formControlName=\"doB\" type=\"date\" class=\"form-control\">\n                    </div>\n                    <div>\n                      <span *ngIf=\"!authorForm.get('doB').value && authorForm.get('doB').touched\"></span>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"tbl1\">\n                    <div class=\"demo-full-width\">\n                      <input formControlName=\"contactNo\" type=\"text\" placeholder=\"Contact No\" class=\"form-control\">\n                    </div>\n                    <div>\n                      <span *ngIf=\"!authorForm.get('contactNo').value && authorForm.get('contactNo').touched\"></span>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"tbl1\">\n                    <div class=\"demo-full-width\">\n                      <input formControlName=\"email\" type=\"text\" placeholder=\"Email Address\" class=\"form-control\">\n                    </div>\n                    <div>\n                      <span *ngIf=\"!authorForm.get('email').value && authorForm.get('email').touched\"></span>\n                    </div>\n                  </td>\n                </tr>\n  \n                <tr>\n                  <td class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"isActive\" name=\"IsActive\" />\n                    <label class=\"form-check-label\" for=\"IsActive\">\n                      Is Active?\n                    </label>\n                  </td>\n                </tr>\n  \n                <tr>\n                  <td></td>\n                  <td class=\"content-center btn-toolbar\">\n                  </td>\n                  <td>\n                    <p *ngIf=\"dataSaved\" style=\"color:rgb(0, 128, 0);font-size:20px;font-weight:bold\" Class=\"success\" align=\"left\">\n                      {{message}}\n                    </p>\n                  </td>\n                </tr>\n  \n              </table>\n  \n            </div>\n            <div>\n              <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!authorForm.valid\" style=\"background-color:darkblue; color:white\">Submit</button>&nbsp;\n              <button class=\"btn btn-info\" type=\"reset\" (click)=\"resetForm()\">Reset</button>\n            </div>\n          </div>\n  \n          <table class=\"table\">\n            <tr ngclass=\"btn-primary\">\n              <th class=\"tbl2\">Author Name</th>\n              <th class=\"tbl2\">Date Of Birth</th>\n              <th class=\"tbl2\">Contact No</th>\n              <th class=\"tbl2\">Email Address</th>\n              <th class=\"tbl2\">Is Active?</th>\n              <th class=\"tbl2\">Edit</th>\n              <th class=\"tbl2\">Delete</th>\n            </tr>\n            <tr *ngFor=\"let author of allAuthor | async\">\n              <td class=\"tbl2\">{{author.authorName}}</td>\n              <td class=\"tbl2\">{{author.doB}}</td>\n              <td class=\"tbl2\">{{author.contactNo}}</td>\n              <td class=\"tbl2\">{{author.email}}</td>\n              <td class=\"tbl2\">{{author.isActive}}</td>\n              <td class=\"tbl2\">\n                <button type=\"button\" class=\"btn btn-info\" (click)=\"loadAuthorToEdit(author.authorId)\">Edit</button>\n              </td>\n              <td class=\"tbl2\">\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteAuthor(author.authorId)\">Delete</button>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n  \n    </form>\n  \n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}