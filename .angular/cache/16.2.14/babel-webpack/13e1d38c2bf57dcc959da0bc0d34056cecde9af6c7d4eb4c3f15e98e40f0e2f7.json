{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PublisherService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = environment.apiBaseUrl;\n  }\n  getAllPublisher() {\n    return this._http.get(this.url + '/Publisher/GetPublishers');\n  }\n  getPublisherById(id) {\n    return this._http.get(this.url + '/Publisher/GetPublisher/' + id);\n  }\n  createPublisher(publisher) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.post(this.url + '/Publisher/InsertPublisher/', publisher, httpOptions);\n  }\n  updatePublisher(id, publisher) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.put(this.url + '/Publisher/UpdatePublisher/' + id, publisher, httpOptions);\n  }\n  deletePublisherById(id) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.delete(this.url + '/Publisher/DeletePublisher/' + id, httpOptions);\n  }\n  static #_ = this.ɵfac = function PublisherService_Factory(t) {\n    return new (t || PublisherService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PublisherService,\n    factory: PublisherService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","environment","PublisherService","constructor","_http","url","apiBaseUrl","getAllPublisher","get","getPublisherById","id","createPublisher","publisher","httpOptions","headers","post","updatePublisher","put","deletePublisherById","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["G:\\Agersob\\Work\\Library3\\LibraryClientSite\\src\\app\\publisher\\publisher.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Publisher } from './publisher.model';\nimport { environment } from 'src/environments/environment.development';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublisherService {\n\n  url: string = environment.apiBaseUrl;\n  constructor(private _http: HttpClient) { }\n\n  getAllPublisher(): Observable<Publisher[]> {\n    return this._http.get<Publisher[]>(this.url + '/Publisher/GetPublishers');\n  }\n\n  getPublisherById(id: any): Observable<any> {\n    return this._http.get<Publisher[]>(this.url + '/Publisher/GetPublisher/' + id);\n  }\n\n  createPublisher(publisher: Publisher): Observable<Publisher> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this._http.post<Publisher>(this.url + '/Publisher/InsertPublisher/', publisher, httpOptions);\n  }\n\n  updatePublisher(id: any, publisher: Publisher): Observable<Publisher> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this._http.put<Publisher>(this.url + '/Publisher/UpdatePublisher/' + id, publisher, httpOptions);\n  }\n\n  deletePublisherById(id: string): Observable<number> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this._http.delete<number>(this.url + '/Publisher/DeletePublisher/' + id, httpOptions);\n  }\n}\n"],"mappings":"AAGA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,0CAA0C;;;AAKtE,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IADzB,KAAAC,GAAG,GAAWJ,WAAW,CAACK,UAAU;EACK;EAEzCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAc,IAAI,CAACH,GAAG,GAAG,0BAA0B,CAAC;EAC3E;EAEAI,gBAAgBA,CAACC,EAAO;IACtB,OAAO,IAAI,CAACN,KAAK,CAACI,GAAG,CAAc,IAAI,CAACH,GAAG,GAAG,0BAA0B,GAAGK,EAAE,CAAC;EAChF;EAEAC,eAAeA,CAACC,SAAoB;IAClC,MAAMC,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACW,IAAI,CAAY,IAAI,CAACV,GAAG,GAAG,6BAA6B,EAAEO,SAAS,EAAEC,WAAW,CAAC;EACrG;EAEAG,eAAeA,CAACN,EAAO,EAAEE,SAAoB;IAC3C,MAAMC,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACa,GAAG,CAAY,IAAI,CAACZ,GAAG,GAAG,6BAA6B,GAAGK,EAAE,EAAEE,SAAS,EAAEC,WAAW,CAAC;EACzG;EAEAK,mBAAmBA,CAACR,EAAU;IAC5B,MAAMG,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACe,MAAM,CAAS,IAAI,CAACd,GAAG,GAAG,6BAA6B,GAAGK,EAAE,EAAEG,WAAW,CAAC;EAC9F;EAAC,QAAAO,CAAA,G;qBA1BUlB,gBAAgB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBvB,gBAAgB;IAAAwB,OAAA,EAAhBxB,gBAAgB,CAAAyB,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}