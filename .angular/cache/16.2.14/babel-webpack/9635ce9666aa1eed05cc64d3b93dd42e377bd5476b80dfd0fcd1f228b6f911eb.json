{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = environment.apiBaseUrl;\n  }\n  getAllCategory() {\n    return this._http.get(this.url + '/Category/GetCategories');\n  }\n  getCategoryById(id) {\n    return this._http.get(this.url + '/Category/GetCategory/' + id);\n  }\n  createCategory(category) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.post(this.url + '/Category/InsertCategory/', category, httpOptions);\n  }\n  updateCategory(id, category) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.put(this.url + '/Category/UpdateCategory/' + id, category, httpOptions);\n  }\n  deleteCategoryById(id) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.delete(this.url + '/Category/DeleteCategory/' + id, httpOptions);\n  }\n  static #_ = this.ɵfac = function CategoryService_Factory(t) {\n    return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryService,\n    factory: CategoryService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","environment","CategoryService","constructor","_http","url","apiBaseUrl","getAllCategory","get","getCategoryById","id","createCategory","category","httpOptions","headers","post","updateCategory","put","deleteCategoryById","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["G:\\Library2\\LibraryClientSite\\src\\app\\category\\category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Category } from './category.model';\nimport { RootComponent } from '../root/root.component';\nimport { environment } from 'src/environments/environment.development';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  url: string = environment.apiBaseUrl\n\n  constructor(private _http: HttpClient) { }\n\n  getAllCategory(): Observable<Category[]> {\n    return this._http.get<Category[]>(this.url + '/Category/GetCategories');\n  }\n\n  getCategoryById(id: any): Observable<any> {\n    return this._http.get<Category[]>(this.url + '/Category/GetCategory/' + id);\n  }\n\n  createCategory(category: Category): Observable<Category> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this._http.post<Category>(this.url + '/Category/InsertCategory/', category, httpOptions);\n  }\n\n  updateCategory(id: any, category: Category): Observable<Category> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this._http.put<Category>(this.url + '/Category/UpdateCategory/' + id, category, httpOptions);\n  }\n\n  deleteCategoryById(id: string): Observable<number> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this._http.delete<number>(this.url + '/Category/DeleteCategory/' + id, httpOptions);\n  }\n}\n"],"mappings":"AAGA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,WAAW,QAAQ,0CAA0C;;;AAKtE,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAFzB,KAAAC,GAAG,GAAWJ,WAAW,CAACK,UAAU;EAEK;EAEzCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAa,IAAI,CAACH,GAAG,GAAG,yBAAyB,CAAC;EACzE;EAEAI,eAAeA,CAACC,EAAO;IACrB,OAAO,IAAI,CAACN,KAAK,CAACI,GAAG,CAAa,IAAI,CAACH,GAAG,GAAG,wBAAwB,GAAGK,EAAE,CAAC;EAC7E;EAEAC,cAAcA,CAACC,QAAkB;IAC/B,MAAMC,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACW,IAAI,CAAW,IAAI,CAACV,GAAG,GAAG,2BAA2B,EAAEO,QAAQ,EAAEC,WAAW,CAAC;EACjG;EAEAG,cAAcA,CAACN,EAAO,EAAEE,QAAkB;IACxC,MAAMC,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACa,GAAG,CAAW,IAAI,CAACZ,GAAG,GAAG,2BAA2B,GAAGK,EAAE,EAAEE,QAAQ,EAAEC,WAAW,CAAC;EACrG;EAEAK,kBAAkBA,CAACR,EAAU;IAC3B,MAAMG,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACe,MAAM,CAAS,IAAI,CAACd,GAAG,GAAG,2BAA2B,GAAGK,EAAE,EAAEG,WAAW,CAAC;EAC5F;EAAC,QAAAO,CAAA,G;qBA3BUlB,eAAe,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfvB,eAAe;IAAAwB,OAAA,EAAfxB,eAAe,CAAAyB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}