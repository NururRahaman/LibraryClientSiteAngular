{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthorService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = environment.apiBaseUrl;\n  }\n  getAllAuthor() {\n    return this._http.get(this.url + '/Author/GetAuthors');\n  }\n  getAuthorById(id) {\n    return this._http.get(this.url + '/Author/GetAuthor/' + id);\n  }\n  createAuthor(author) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.post(this.url + '/Author/InsertAuthor/', author, httpOptions);\n  }\n  updateAuthor(id, author) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.put(this.url + '/Author/UpdateAuthor/' + id, author, httpOptions);\n  }\n  deleteAuthor(id) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.delete(this.url + '/Author/DeleteAuthor/' + id, httpOptions);\n  }\n  static #_ = this.ɵfac = function AuthorService_Factory(t) {\n    return new (t || AuthorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthorService,\n    factory: AuthorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","environment","AuthorService","constructor","_http","url","apiBaseUrl","getAllAuthor","get","getAuthorById","id","createAuthor","author","httpOptions","headers","post","updateAuthor","put","deleteAuthor","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["G:\\Library3\\LibraryClientSite\\src\\app\\author\\author.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Author } from './author.model';\nimport { environment } from 'src/environments/environment.development';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorService {\n\n  url :string = environment.apiBaseUrl\n\n  constructor(private _http: HttpClient) { }\n\n  getAllAuthor(): Observable<Author[]> {\n    return this._http.get<Author[]>(this.url + '/Author/GetAuthors');\n  }\n\n  getAuthorById(id: any): Observable<any> {\n    return this._http.get<Author>(this.url + '/Author/GetAuthor/' + id);\n  }\n\n  createAuthor(author: Author): Observable<Author> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this._http.post<Author>(this.url + '/Author/InsertAuthor/', author, httpOptions);\n  }\n\n  updateAuthor(id: any, author: Author): Observable<Author> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this._http.put<Author>(this.url + '/Author/UpdateAuthor/' + id, author, httpOptions);\n  }\n\n  deleteAuthor(id: string): Observable<number> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this._http.delete<number>(this.url + '/Author/DeleteAuthor/' + id, httpOptions);\n  }\n\n}\n"],"mappings":"AAGA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,0CAA0C;;;AAKtE,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAFzB,KAAAC,GAAG,GAAWJ,WAAW,CAACK,UAAU;EAEK;EAEzCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAW,IAAI,CAACH,GAAG,GAAG,oBAAoB,CAAC;EAClE;EAEAI,aAAaA,CAACC,EAAO;IACnB,OAAO,IAAI,CAACN,KAAK,CAACI,GAAG,CAAS,IAAI,CAACH,GAAG,GAAG,oBAAoB,GAAGK,EAAE,CAAC;EACrE;EAEAC,YAAYA,CAACC,MAAc;IACzB,MAAMC,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACW,IAAI,CAAS,IAAI,CAACV,GAAG,GAAG,uBAAuB,EAAEO,MAAM,EAAEC,WAAW,CAAC;EACzF;EAEAG,YAAYA,CAACN,EAAO,EAAEE,MAAc;IAClC,MAAMC,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACa,GAAG,CAAS,IAAI,CAACZ,GAAG,GAAG,uBAAuB,GAAGK,EAAE,EAAEE,MAAM,EAAEC,WAAW,CAAC;EAC7F;EAEAK,YAAYA,CAACR,EAAU;IACrB,MAAMG,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACe,MAAM,CAAS,IAAI,CAACd,GAAG,GAAG,uBAAuB,GAAGK,EAAE,EAAEG,WAAW,CAAC;EACxF;EAAC,QAAAO,CAAA,G;qBA3BUlB,aAAa,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbvB,aAAa;IAAAwB,OAAA,EAAbxB,aAAa,CAAAyB,IAAA;IAAAC,UAAA,EAFZ;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}